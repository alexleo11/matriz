
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author STEVEN
 */
public class frmVentana extends javax.swing.JFrame {

    /**
     * Creates new form frmVentana
     */
    public frmVentana() {
        initComponents();
    }
String []vec=new String[10]; //creamos la extencion de nuestro vector
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void ascendente(){
        // TODO add your handling code here:
        char a; //creamos una variable de tipo char
        String let,aux; //dos variables string  una para guardar la primera letra de la palabra
                        //y otra para realizar el intercambio
        int pos=0; //una posicion para guardar en orden 
         for (int j = 97; j < 123; j++) { //creamos un ciclo for para obtener el alfabeto del codigo ASCCI
                                          //97=a   122=z
                a = (char) j;//realizamos la convercion 
                for (int k = 0; k < vec.length; k++) {//un ciclo repetitivo para el metodo de ordenamiento
                    String nom = vec[k]; //obtenemos los dotos del vector en una variable  para su manipulacion
                    nom = nom.toLowerCase();//transforma de mayusculas a minusculas 
                    let= nom.substring(0, 1);//Con el substring obtenemos la primera letra de la palabra
                    if (let.charAt(0) == a) {//la condicion es... si la primera letra de la palabra es igual a la letra
                                             //del alfabeto    realiza el intercambio
                        aux = vec[pos];//guardamos los datos del vector en la posicion inicial, en un auxiliar 
                        vec[pos] = vec[k];//ahora guardamos en la posicion inicial  los datos del vector que cumple
                                          //la condicion de ser igual a la letra del alfabeto
                        vec[k]=aux;//recuperamos los datos  para guardar en el vector
                        
                        pos++;//se incrementa la posicion donde se van ir guardando las letras de forma ordenada
                    }
                }
            }
         list1.removeAll(); //limpiamos el cuadro de lista
         for (int i = 0; i < vec.length; i++) {
            list1.add(vec[i]); //imprimimos los datos
        }
    
}
    
    public void descendente(){
                // TODO add your handling code here:
        char a; //creamos una variable de tipo char
        String let,aux; //dos variables string  una para guardar la primera letra de la palabra
                        //y otra para realizar el intercambio
        int pos=0; //una posicion para guardar en orden 
         for (int j = 123; j > 97; j--) { //creamos un ciclo for para obtener el alfabeto del codigo ASCCI
                                          //97=a   122=z
                a = (char) j;//realizamos la convercion 
                for (int k = 0; k < vec.length; k++) {//un ciclo repetitivo para el metodo de ordenamiento
                    String nom = vec[k]; //obtenemos los dotos del vector en una variable  para su manipulacion
                    nom = nom.toLowerCase();//transforma de mayusculas a minusculas 
                    let= nom.substring(0, 1);//Con el substring obtenemos la primera letra de la palabra
                    if (let.charAt(0) == a) {//la condicion es... si la primera letra de la palabra es igual a la letra
                                             //del alfabeto    realiza el intercambio
                        aux = vec[pos];//guardamos los datos del vector en la posicion inicial, en un auxiliar 
                        vec[pos] = vec[k];//ahora guardamos en la posicion inicial  los datos del vector que cumple
                                          //la condicion de ser igual a la letra del alfabeto
                        vec[k]=aux;//recuperamos los datos  para guardar en el vector
                        
                        pos++;//se incrementa la posicion donde se van ir guardando las letras de forma ordenada
                    }
                }
            }
         //list1.removeAll(); //limpiamos el cuadro de lista
         for (int i = 0; i < vec.length; i++) {
            lista2.add(vec[i]); //imprimimos los datos
        }
    
}
    
    public void Validadatos(){
        if(vec[0].equals("")|| vec[1].equals("")|| vec[2].equals("")|| vec[3].equals("")|| vec[4].equals("")|| vec[5].equals("")|| vec[6].equals("")|| vec[7].equals("")|| vec[8].equals("")|| vec[9].equals("") ){
            JOptionPane.showMessageDialog(null,"NO DEBE DE DEJAR ESPACIOS EN BLANCO");
        }else{
            JOptionPane.showMessageDialog(null,"HA LLENADO LA LISTA");
        }
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        list1 = new java.awt.List();
        jButton2 = new javax.swing.JButton();
        lista2 = new java.awt.List();
        list3 = new java.awt.List();
        txtarea1 = new javax.swing.JTextField();
        txtarea10 = new javax.swing.JTextField();
        txtarea2 = new javax.swing.JTextField();
        txtarea3 = new javax.swing.JTextField();
        txtarea4 = new javax.swing.JTextField();
        txtarea5 = new javax.swing.JTextField();
        txtarea6 = new javax.swing.JTextField();
        txtarea7 = new javax.swing.JTextField();
        txtarea8 = new javax.swing.JTextField();
        txtarea9 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Ordenar (Ascendente y Descendente)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 260, 42));
        getContentPane().add(list1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 160, 200));

        jButton2.setText("llenar lista");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 140, 40));
        getContentPane().add(lista2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, 170, 200));
        getContentPane().add(list3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 100, 200));

        txtarea1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtarea1ActionPerformed(evt);
            }
        });
        getContentPane().add(txtarea1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 70, 20));
        getContentPane().add(txtarea10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, 70, -1));
        getContentPane().add(txtarea2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 70, -1));
        getContentPane().add(txtarea3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 70, -1));
        getContentPane().add(txtarea4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 70, -1));
        getContentPane().add(txtarea5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 70, -1));
        getContentPane().add(txtarea6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, 70, -1));

        txtarea7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtarea7ActionPerformed(evt);
            }
        });
        getContentPane().add(txtarea7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 70, -1));
        getContentPane().add(txtarea8, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 70, -1));

        txtarea9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtarea9ActionPerformed(evt);
            }
        });
        getContentPane().add(txtarea9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 70, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("TAMAÃ‘O DE LA MATRIZ: 10");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 330, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ascendente();
        descendente();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        /*String hola = txtarea.getText();
     txtarea.setText("");
     
     String[] arreglo = hola.split(" ");
       
        
         for (int i = 0; i < arreglo.length; i++) {
            list1.add(arreglo[i]);
         }*/
        
        Validadatos();
    
      
        
        vec[0]=txtarea1.getText();
        vec[1]=txtarea2.getText();
        vec[2]=txtarea3.getText();
        vec[3]=txtarea4.getText();
        vec[4]=txtarea5.getText();
        vec[5]=txtarea6.getText();
        vec[6]=txtarea7.getText();
        vec[7]=txtarea8.getText();
        vec[8]=txtarea9.getText();
        vec[9]=txtarea10.getText();
         for (int i = 0; i < vec.length; i++) {
            list3.add(vec[i]);
         
        }
         
         txtarea1.setText("");
        txtarea2.setText("");
        txtarea3.setText("");
        txtarea4.setText("");
        txtarea5.setText("");
        txtarea6.setText("");
        txtarea7.setText("");
        txtarea8.setText("");
        txtarea9.setText("");
        txtarea10.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtarea7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtarea7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtarea7ActionPerformed

    private void txtarea9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtarea9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtarea9ActionPerformed

    private void txtarea1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtarea1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtarea1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private java.awt.List list1;
    private java.awt.List list3;
    private java.awt.List lista2;
    private javax.swing.JTextField txtarea1;
    private javax.swing.JTextField txtarea10;
    private javax.swing.JTextField txtarea2;
    private javax.swing.JTextField txtarea3;
    private javax.swing.JTextField txtarea4;
    private javax.swing.JTextField txtarea5;
    private javax.swing.JTextField txtarea6;
    private javax.swing.JTextField txtarea7;
    private javax.swing.JTextField txtarea8;
    private javax.swing.JTextField txtarea9;
    // End of variables declaration//GEN-END:variables
}
